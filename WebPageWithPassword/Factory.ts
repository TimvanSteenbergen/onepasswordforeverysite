/**
 * Created by tvansteenbergen on 2017-03-09.
 *
 * This is what I do every time you visit any page:
 * - I check if this site allows you to log on.
 * - If not: I do nothing
 * - If so: I check in your userData if you have logged in to this site before.
 * -        If not: You need to log in the old-fashioned way, change your password with my help and log in again.
 * -        If so: I retrieve your userid for this site and copy the value to the user-id's inputfield.
 * -               I add my own version of the password-field
 * -               I put your userid, that you have used before on this site, in the user-id's inputfield
 */

(function () {

    let thisSite: Site;
    let pwdInputs: HTMLInputElement[];
    pwdInputs = getVisiblePwdInputFields();
    if (pwdInputs.length === 0) {//There are no password-fields on this page, so no need for me to do anything.
        return;
    } else {//Login form detected...
        chrome.storage.local.get('_sites', function (response) {
            if (!response._sites || response._sites.length === 0) { //..., but no UserData is yet available to OPFES. User should upload or initiate userData
                let popupForm = new NoUserDataForm();
                popupForm.showPopupForm();
            } else {//Login form detected AND userdata is available! Now determine the PopupFormType that has to get called
                for (let site of response._sites) {
                    if (window.location.href.indexOf(site.domain) >= 0) {
                        thisSite = new Site(
                            site.domain, site.userId, site.salt, site.sequenceNr, site.maxPwdChars, site.allowedSpecialCharacters, site.lastUsed, site.remark
                        );
                    }
                }
                if (!thisSite) {//Login form detected, but this site is not found in the userData. User should change her password to a password generated by OPFES
                    let popupForm = new UnknownSite();
                    popupForm.showPopupForm();
                } else if (pwdInputs.length === 1) { //Login form detected with only one passwordField and the site is in the userData,
                    let popupForm = new Login();
                    popupForm.showPopupForm(thisSite, pwdInputs);
                } else if (pwdInputs.length === 2) { //Login form detected with two password-fields. Likely new and verify-password
                    let popupForm = new NewAndVerifyPassword();
                    popupForm.showPopupForm(thisSite, pwdInputs);
                } else if (pwdInputs.length === 3) { //Login form detected with three password-fields. Likely respectively: old, new and verify-password
                    let popupForm = new OldNewAndVerifyPassword();
                    popupForm.showPopupForm(thisSite, pwdInputs);
                }
            }
        });
    }

    // This function checks if the given element is visible
    // Returns a boolean
    function isHidden(el) { // Check if the password-input-field is hidden for the user
        return (el.offsetParent === null)
    }

    function getVisiblePwdInputFields(maxPwdInputs: number = 5) {
        let inputElements: NodeListOf<HTMLInputElement> = document.getElementsByTagName("input");
        let cnt: number = 0;
        let pwdInputs: HTMLInputElement[] = [];
        for (let i = 0; i < inputElements.length; i++) {
            if (inputElements[i].type.toLowerCase() === `password`
                && inputElements[i].id.substring(0, 5) !== `OPFES`
                && !isHidden(inputElements[i])) {
                // We found a password field! Let's add it to our collection:
                pwdInputs[cnt++] = inputElements[i];
                if (cnt > maxPwdInputs){
                    return pwdInputs;
                }
            }
        }
        return pwdInputs;
    }

})();
